{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","name","id","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,uBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAGlDN,EAAc,KAKd,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAUT,EACVU,SArBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,QAqBfG,KAAK,GACLC,GAAG,S,+BClCNC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEmCC,UAAUH,GAF7C,oBACJ,mCADI,sBAKAI,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHZ,GAAIY,EAAIZ,GACRa,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCEPM,EAAc,SAAC,GAAyB,EAAtBhB,GAAuB,IAAnBa,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IACtC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAMN,IACrB,4BAAKA,QCIJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECPb,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAZAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAM,SAACb,GACJW,EAAS,CACLd,KAAKG,EACLS,SAAS,SAGtB,CAACnB,IAIGoB,EDTwBI,CAAaxB,GAAhCY,EAJyB,EAI9BL,KAAaY,EAJiB,EAIjBA,QAUpB,OACI,qCACI,6BAAKnB,IAEJmB,GAAW,mBAAGJ,UAAU,oCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOH,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADEA,EAAIZ,aE5BzB2B,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,kBAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAK9B,OACI,qCACI,gDAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BAEQS,EAAWiB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCjBjC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b7bd262b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( categories => [ inputValue, ...categories] )\r\n        }\r\n\r\n        setInputValue('')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <h3>{inputValue}</h3>\r\n            <input\r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n                name=\"\" \r\n                id=\"\" \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category )=>{\r\n    const apiKey = '1sTzaBPrzXYwRt00x6YSIeUv156I17GA';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${apiKey}&limit=10`;\r\n    \r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\n//  Mi key Giphy\r\n//  1sTzaBPrzXYwRt00x6YSIeUv156I17GA\r\n// endpoint \r\n// api.giphy.com/v1/gifs/search\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // getGifs()\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\" animate__animated animate__flash\" >Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( (img)=>{\r\n                setstate({\r\n                    data:img,\r\n                    loading: false\r\n                })\r\n            } );// otra forma de enviar lo que viene de la proimesa hacia la funcion setImages\r\n    }, [category]);\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr/>\r\n            \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GifGrid\r\n                            key={category} \r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}